DAY 2 EXERCISE 1 
SLF STUDY

DAY 2 EXERCISE 2
SLF STUDY

DAY 2 EXERCISE 3
CREATE TABLE Player(
PId INTEGER PRIMARY KEY,
PName VARCHAR2(20) NOT NULL,
Ranking INTEGER
);

DAY 2 EXERCISE 4
DAY 2 EXERCISE 5
DAY 2 EXERCISE 6
DAY 2 EXERCISE 7
DAY 2 EXERCISE 8
DAY 2 EXERCISE 9
DAY 2 EXERCISE 10
DAY 2 EXERCISE 11
DAY 2 EXERCISE 12
DAY 2 EXERCISE 13
DAY 2 EXERCISE 14
DAY 2 EXERCISE 15
DAY 2 EXERCISE 16
DAY 2 EXERCISE 17
DAY 2 EXERCISE 18
DAY 2 EXERCISE 19
DAY 2 EXERCISE 20
DAY 2 EXERCISE 21
DAY 2 EXERCISE 22


DAY 4 EXERCISE 23
SELECT PRODID, PDESC, CATEGORY FROM PRODUCT WHERE UPPER(CATEGORY) LIKE 'E%'
SELECT PRODID, PDESC, CATEGORY FROM PRODUCT WHERE UPPER(CATEGORY) = 'ENGINEERING'

DAY 4 EXERCISE 24
SELECT PRODID, SUBSTR(PDESC,1,5) "PDESC_FIVE", CATEGORY FROM PRODUCT

DAY 4 EXERCISE 25
SELECT COUNT(*) as SALE_COUNT FROM SALE WHERE SYSDATE-SLDATE<1800
SELECT COUNT(SALEID) as SALE_COUNT FROM SALE WHERE MONTHS_BETWEEN(SYSDATE,SLDATE)<60

DAY 4 EXERCISE 26
SELECT NVL(PDESC, 'No Description') "PDESC", DISCOUNT FROM PRODUCT

DAY 4 EXERCISE 27
SELECT PRODID, CATEGORY, PRICE, DISCOUNT FROM PRODUCT ORDER BY CATEGORY DESC, PRICE ASC

DAY 4 EXERCISE 28
SELECT PRODID, CATEGORY, DISCOUNT FROM PRODUCT WHERE CATEGORY = 'Sports' OR CATEGORY = 'Apparel' ORDER BY CATEGORY, DISCOUNT

DAY 4 EXERCISE 29
SELECT 
To_CHAR(sldate,'Month') AS MONTH,
count(To_CHAR(sldate,'Month')) as Number_sale
FROM SALE
GROUP BY To_CHAR(sldate,'Month')
ORDER BY COUNT(To_CHAR(sldate,'Month')) desc

DAY 4 EXERCISE 30
SELECT PRODID,SUM(QUANTITY)  "QTY_SOLD" FROM SALEDETAIL WHERE QUANTITY > 1 GROUP BY PRODID HAVING COUNT(PRODID)>1



DAY 4 EXERCISE 31
SELECT PRODID, PDESC, PRICE  "Old_Price", ROUND(PRICE-(PRICE*22.5)/100,2)"New_Price" from Product WHERE CATEGORY = 'Sports'


DAY 4 EXERCISE 32
SELECT SALEID, ABS(ROUND(MONTHS_BETWEEN(SLDATE, SYSDATE),1)) "MONTH_AGED" FROM SALE

DAY 4 EXERCISE 33
SELECT ROUND(AVG(PRICE), 2) "Avg", MIN(PRICE) "Min", MAX(PRICE) "Max", COUNT(PRODID) "Total" FROM Product

DAY 4 EXERCISE 34
SELECT CONCAT(CONCAT(SNAME, ' is from '), LOCATION) AS RESULT FROM SalesMan

DAY 4 EXERCISE 35
SELECT TO_CHAR(TO_DATE('Jan/10/2015', 'MON/DD/YYYY'), 'Month') MONTH, TO_NUMBER('2,50,000', '9,99,999') AMOUNT FROM DUAL

DAY 4 EXERCISE 36
SELECT PRODID, PDESC, PRICE FROM PRODUCT ORDER BY PRICE DESC, PRODID DESC

DAY 4 EXERCISE 37
SELECT PRODID, PDESC, PRICE FROM PRODUCT ORDER BY PDESC ASC

DAY 4 EXERCISE 38
SELECT LOCATION, COUNT(SID) NUMBER_SMAN FROM SALESMAN GROUP BY LOCATION

DAY 4 EXERCISE 39
SELECT CATEGORY FROM PRODUCT GROUP BY CATEGORY HAVING COUNT(PRODID) >1

DAY 5 EXERCISE 40
SELECT SID, SNAME, LOCATION FROM SALESMAN WHERE SNAME LIKE '%e%'AND  LOCATION LIKE'%o%'
UNION
SELECT SID, SNAME, LOCATION FROM SALESMAN WHERE SNAME LIKE '%a%'AND LOCATION LIKE'%a%'

DAY 5 EXERCISE 41
SELECT PRODID, PDESC, CATEGORY, DISCOUNT FROM PRODUCT WHERE DISCOUNT<10 
UNION ALL
SELECT PRODID, PDESC, CATEGORY, DISCOUNT FROM PRODUCT WHERE CATEGORY = 'Sports'

DAY 5 EXERCISE 42
SELECT PRODID, PDESC, CATEGORY, DISCOUNT FROM PRODUCT WHERE DISCOUNT<10 
UNION
SELECT PRODID, PDESC, CATEGORY, DISCOUNT FROM PRODUCT WHERE CATEGORY = 'Sports'

DAY 5 EXERCISE 43
select 'P' AS TYPE, PRODID AS ID, CATEGORY "DETAILS"  from PRODUCT UNION
select 'P' AS TYPE, PRODID AS ID, CATEGORY "DETAILS"  from PRODUCT 

DAY 5 EXERCISE 44
SELECT E.ID, E.ENAME, E.DEPT, C.COMPID, C.MAKE FROM EMPLOYEE E INNER JOIN COMPUTER C ON C.COMPID = E.COMPID;

DAY 5 EXERCISE 45
SELECT E.ID, E.ENAME, E.DEPT, C.COMPID, C.MAKE FROM EMPLOYEE E INNER JOIN COMPUTER C ON C.COMPID = E.COMPID WHERE MODEL = 'Precision' OR MODEL = 'Edge'

DAY 5 EXERCISE 46
SELECT DEPT, COUNT(C.COMPID) "NUMBER OF COMPUTERS"
FROM EMPLOYEE E INNER JOIN COMPUTER C
ON E.COMPID = C.COMPID AND MAKE='Dell'
GROUP BY DEPT

DAY 5 EXERCISE 47
SELECT S1.SALEID, S1.SLDATE
FROM Sale S1, Salesman S2
WHERE S1.SID = S2.SID
AND S2.Location = 'London'

DAY 5 EXERCISE 48
SELECT DISTINCT SM.SID, SM.SNAME, SM.LOCATION FROM SALESMAN SM INNER JOIN SALESMAN SS ON SM.LOCATION IN ('London', 'Chicago') AND SM.LOCATION = SS.LOCATION 

SELECT DISTINCT SM.SID, SM.SNAME, SM.LOCATION FROM SALESMAN SM INNER JOIN SALESMAN SS ON SM.SID <> SS.SID AND SM.LOCATION = SS.LOCATION 

DAY 5 EXERCISE 49
SELECT SM.SNAME, S.SALEID FROM SALESMAN SM LEFT OUTER JOIN SALE S ON SM.SID = S.SID

DAY 5 EXERCISE 50
SELECT SM.SID, SM.SNAME, SUM(P.PRICE*SD.QUANTITY) "TAMOUNT", SUM((P.PRICE*SD.QUANTITY)*P.DISCOUNT/100) "TDISCOUNT"
FROM SALE S INNER JOIN SALESMAN SM ON SM.SID = S.SID 
INNER JOIN SALEDETAIL SD ON S.SALEID = SD.SALEID 
INNER JOIN PRODUCT P ON SD.PRODID = P.PRODID 
GROUP BY SM.SID, SM.SNAME 
ORDER BY SUM(P.PRICE*SD.QUANTITY) DESC


DAY 5 EXERCISE 51
SELECT S.SALEID, P.PRODID, SM.SID, SM.SNAME FROM SALESMAN SM 
INNER JOIN SALE S ON SM.SID = S.SID 
INNER JOIN SALEDETAIL SD ON S.SALEID = SD.SALEID 
INNER JOIN PRODUCT P ON SD.PRODID = P.PRODID

DAY 5 EXERCISE 52
SELECT SM.SID, SM.SNAME, NVL(SUM(P.PRICE*SD.QUANTITY), 0) "TAMOUNT", NVL(SUM((P.PRICE*SD.QUANTITY)*P.DISCOUNT/100), 0) "TDISCOUNT"
FROM SALE S INNER JOIN SALESMAN SM ON SM.SID = S.SID 
INNER JOIN SALEDETAIL SD ON S.SALEID = SD.SALEID 
LEFT OUTER JOIN PRODUCT P ON SD.PRODID = P.PRODID 
GROUP BY SM.SID, SM.SNAME 
ORDER BY SUM(P.PRICE*SD.QUANTITY) DESC

DAY 5 EXERCISE 53
SELECT SM.LOCATION, P.CATEGORY, SUM(SD.QUANTITY) "Total Quantity" FROM SALESMAN SM INNER JOIN SALE S ON SM.SID = S.SID INNER JOIN  SALEDETAIL SD ON SD.SALEID = S.SALEID INNER JOIN PRODUCT P ON P.PRODID = SD.PRODID GROUP BY SM.LOCATION, P.CATEGORY; 

DAY 5 EXERCISE 54
SELECT E.ENAME, E.DEPT, NVL(C.MODEL, 'Not allocated') MODEL FROM EMPLOYEE E LEFT OUTER JOIN COMPUTER C ON E.COMPID = C.COMPID

DAY 5 EXERCISE 55
SELECT E.ID, E.ENAME, E.DEPT, C.MODEL FROM EMPLOYEE E FULL OUTER JOIN COMPUTER C ON E.COMPID = C.COMPID 

DAY 5 EXERCISE 56
SELECT E.ID, E.ENAME, EM.ID MGRID, EM.ENAME MGRNAME, C.MODEL E_MODEL, CC.MODEL M_MODEL FROM EMPLOYEE EM  INNER JOIN EMPLOYEE E ON  E.MANAGER = EM.ID AND EM.COMPID IS NOT NULL INNER JOIN COMPUTER C  ON E.COMPID = C.COMPID INNER JOIN COMPUTER CC ON EM.COMPID = CC.COMPID

DAY 5 EXERCISE 57
SELECT SM.SID, SM.SNAME FROM SALESMAN SM INNER JOIN SALE S ON SM.SID != S.SID
MINUS
SELECT SM.SID, SM.SNAME FROM Salesman SM INNER JOIN SALE S ON SM.SID = S.SID

DAY 5 EXERCISE 58
SELECT P.PRODID, P.CATEGORY, P.PRICE FROM PRODUCT P INNER JOIN PRODUCT PP ON P.PRICE = PP.PRICE WHERE  P.PRODID <> PP.PRODID


DAY 6 EXERCISE 59
DAY 6 EXERCISE 60


=================================================================================================

PRACTICE INNER JOINS 
Q1:
SELECT E.ID "ID", E.ENAME "ENAME", E.COMPID "COMPID", C.MODEL FROM EMPLOYEE E INNER JOIN COMPUTER C ON E.COMPID = C.COMPID WHERE C.MYEAR = '2014'

Q2
SELECT E.ID "ID", E.ENAME "ENAME", C.COMPID "COMPID", C.MODEL FROM EMPLOYEE E INNER JOIN COMPUTER C ON E.COMPID = C.COMPID WHERE C.MYEAR = 2013 

Q3
SELECT C.MAKE, COUNT(E.COMPID) "NUMBER OF COMPUTERS" FROM COMPUTER C INNER JOIN EMPLOYEE E ON C.COMPID = E.COMPID  GROUP BY C.MAKE HAVING COUNT(E.COMPID) >1

PRACTICE SELF JOIN

Q1
SELECT E.Id, E.ENAME FROM Employee E INNER JOIN Employee J ON E.Dept = J.Dept AND E.Id <> J.Id AND J.ENAME='Jack Abraham';

Q2
SELECT E.Id EMPID, E.EName EmpName, J.ID MgrId, J.EName MgrName, C.Make FROM Employee E INNER JOIN Employee J ON E.Manager = J.Id INNER JOIN Computer C ON C.CompId = E.CompId;

Q3
SELECT E.ID, E.ENAME, J.ID "MGRID", J.ENAME "MGRNAME", K.MODEL "E_MODEL", L.MODEL "M_MODEL" 
FROM EMPLOYEE E 
INNER JOIN 
EMPLOYEE J ON E.MANAGER = J.ID 
INNER JOIN 
COMPUTER K ON E.COMPID = K.COMPID 
INNER JOIN 
COMPUTER L ON J.COMPID = L.COMPID 
WHERE K.MYEAR = L.MYEAR 

PRACTICE OUTER JOIN 
Q1
SELECT C.COMPID, C.MAKE, C.MODEL, NVL(TO_CHAR(E.ID), 'Not assigned') "ID" FROM COMPUTER C LEFT OUTER JOIN EMPLOYEE E ON C.COMPID = E.COMPID 





==================================================================================================

DAY 1 COLLABRATIVE ASSIGNMENT 1
SELF STUDY

DAY 3 COLLABRATIVE ASSIGNMENT 2
DAY 3 COLLABRATIVE ASSIGNMENT 3
DAY 3 COLLABRATIVE ASSIGNMENT 4
DAY 3 COLLABRATIVE ASSIGNMENT 5
DAY 3 COLLABRATIVE ASSIGNMENT 6
DAY 3 COLLABRATIVE ASSIGNMENT 7
DAY 3 COLLABRATIVE ASSIGNMENT 8
DAY 3 COLLABRATIVE ASSIGNMENT 9
DAY 3 COLLABRATIVE ASSIGNMENT 10
DAY 3 COLLABRATIVE ASSIGNMENT 11
DAY 3 COLLABRATIVE ASSIGNMENT 12
DAY 3 COLLABRATIVE ASSIGNMENT 13
DAY 3 COLLABRATIVE ASSIGNMENT 14


DAY 3 COLLABRATIVE ASSIGNMENT 15
 insert into shopper values (101,'Mark Jane','Male',1234567890,'Allen Street, New York')
 
DAY 3 COLLABRATIVE ASSIGNMENT 16
 INSERT INTO ARTICLE VALUES ('A1001', 'Mouse', 500,0, 'C')
 
 DAY 3 ASSIGNMENT 17
 INSERT INTO STORE  VALUES('Loyal World', 'Infy Campus, Mysore', 'Rohan Kumar')
 
 DAY 3 ASSIGNMENT 18
 INSERT INTO BILL VALUES (1001, 'Loyal World', 101, 'A1001', 1000, '20-OCT-15', 2)
 
 DAY 3 ASSIGNMENT 19
 INSERT INTO SUPPLIER VALUES ('S501', 'Avaya Ltd', 9012345678, 'Mysore')
 
 DAY 3 ASSIGNMENT 20
 SELECT DESCR, PRICE FROM ITEM WHERE DESCR LIKE '%Hard disk'
 
 DAY 3 ASSIGNMENT 21
 SELECT QUOTATIONID, SNAME, ITEMCODE, QUOTEDPRICE, QDATE, QSTATUS FROM QUOTATION WHERE QSTATUS != 'Accepted'
 
 DAY 3 ASSIGNMENT 22
 SELECT DESIGNATION, SALARY FROM EMPDETAILS WHERE DESIGNATION = 'Manager' OR DESIGNATION = 'Billing Staff'
 
 DAY 3 ASSIGNMENT 23
 SELECT ROID, LOCATION FROM RETAILOUTLET WHERE MANAGERID IS NULL
 
 DAY 3 ASSIGNMENT 24
 SELECT ORDERID, QUOTATIONID, STATUS FROM ORDERS WHERE ORDERDATE BETWEEN '1-DEC-2014' AND '1-JAN-2015' 
 
 DAY 3 ASSIGNMENT 25
 SELECT ItemCode, Descr, Price FROM Item WHERE 
(Descr LIKE '%Shirt%' 
OR 
Descr LIKE '%Skirt%' )
AND
Category='B' 

 DAY 3 ASSIGNMENT 26
 SELECT DISTINCT DESIGNATION, SALARY FROM EMPDETAILS
 
 DAY 3 ASSIGNMENT 27
 SELECT ITEMCODE, DESCR, PRICE FROM ITEM
 
 DAY 3 ASSIGNMENT 28
 SELECT QUOTATIONID, SNAME FROM QUOTATION WHERE QSTATUS ='Accepted' OR QSTATUS = 'Rejected'
 
 DAY 3 ASSIGNMENT 29 *************************************************
 DAY 3 ASSIGNMENT 30
 SELECT DISTINCT ITEMTYPE FROM ITEM
 
 
 DAY 3 ASSIGNMENT 31
 SELECT  orderid, quotationid, status, pymtdate FROM ORDERS WHERE PYMTDATE IS NULL


 DAY 3 ASSIGNMENT 32
 SELECT DISTINCT ITEMTYPE, CATEGORY FROM ITEM
 
 DAY 3 ASSIGNMENT 33
 SELECT EMPID, SALARY "Current Salary",  (SALARY+(SALARY*10)/100) "New Salary", (SALARY*10)/100 "Incremented Amount" from empdetails
 
 DAY 3 ASSIGNMENT 34
 insert into city values ('Mysore')


 DAY 3 ASSIGNMENT 35
 INSERT INTO Address VALUES (350, 'Electronics City', 'Mysore', 570018, 'Karnataka' )
 
 DAY 3 ASSIGNMENT 36
 insert into article
values ('A1002','Keyboard',1000,10,'B');


 DAY 3 ASSIGNMENT 37
 select QUOTATIONID, QDATE, QUOTEDPRICE FROM QUOTATION WHERE QUOTEDPRICE > 1400 AND QUOTEDPRICE <2150
 
 select QUOTATIONID, QDATE, QUOTEDPRICE FROM QUOTATION WHERE QUOTEDPRICE BETWEEN 1401 AND 2149
 
 DAY 3 ASSIGNMENT 38
 SELECT ITEMTYPE, DESCR, PRICE FROM ITEM WHERE PRICE >4000
 
 DAY 3 ASSIGNMENT 39
 SELECT DESIGNATION, SALARY FROM EMPDETAILS WHERE SALARY >= 2500 AND salary <= 5000 AND DESIGNATION= 'Manager' OR DESIGNATION = 'Billing Staff'
 

DAY 4 COLLABRATIVE ASSIGNMENT 40
SELECT  DISTINCT ITEMTYPE,
CASE 
WHEN PRICE BETWEEN 0 and 499 THEN 'Cheap'
WHEN PRICE BETWEEN 500 and 1999 THEN 'Affordable'
WHEN PRICE BETWEEN 2000 and 4999 THEN 'Expensive' 
WHEN PRICE >= 5000 THEN 'Very Expensive'
END AS CLASSIFICATION
FROM Item ORDER BY ITEMTYPE

day 4 collabrative assignment 41
SELECT TO_CHAR(QDATE, 'Month') AS MONTH, COUNT(QUOTATIONID) AS QUOTATIONCOUNT FROM Quotation GROUP BY TO_CHAR(QDATE, 'Month')

DAY 4 COLLABRATIVE ASSIGNMENT 42
SELECT ORDERID, ROUND(MONTHS_BETWEEN(PYMTDATE, ORDERDATE),2) "No of Months" FROM ORDERS WHERE ROUND(MONTHS_BETWEEN(PYMTDATE, ORDERDATE),2)>0.1 AND STATUS='Delivered';
 
 
DAY 4 COLLABRATIVE ASSIGNMENT 43
SELECT EMPID,SALARY AS "Current Salary",SALARY+(SALARY*20)/100 AS "New Salary",
ROUND(SALARY+(SALARY*20)/100.00-SALARY,2) AS "Incremented Amount" FROM EMPDETAILS WHERE Designation = 'Manager'


DAY 4 COLLABRATIVE ASSIGNMENT 44
SELECT ITEMCODE FROM ITEM WHERE (QTYONHAND-REORDERLEVEL)>50 OR (QTYONHAND-REORDERLEVEL)<-50

DAY 4  ASSIGNMENT 45
SELECT ITEMCODE, AVG(QTYAVAILABLE) "Average Quantity" FROM RETAILSTOCK GROUP BY ITEMCODE HAVING AVG(QTYAVAILABLE) <75

DAY 4 COLLABRATIVE ASSIGNMENT 46
SELECT PYMTMODE, COUNT(*) PYMTCOUNT FROM ORDERS WHERE TO_CHAR(PYMTDATE, 'YYYY')<'2015' GROUP BY PYMTMODE HAVING COUNT(*)>1

DAY 4 COLLABRATIVE ASSIGNMENT 47
SELECT SNAME, AVG(QUOTEDPRICE) "Average quoted price" FROM QUOTATION WHERE QSTATUS ='Closed' GROUP BY SNAME HAVING AVG(QUOTEDPRICE) > 500 

DAY 4 COLLABRATIVE ASSIGNMENT 48
SELECT ITEMTYPE, CATEGORY, ROUND(AVG(PRICE),2) "Average item price" FROM ITEM WHERE ITEMTYPE IN ('FMCG','Computer') GROUP BY ITEMTYPE, CATEGORY HAVING ROUND(AVG(PRICE),2)<2000

DAY 4 COLLABRATIVE ASSIGNMENT 49
SELECT  JOB, AVG(SAL) "Average Salary" FROM EMP WHERE JOB IN ('MANAGER','ANALYST') GROUP BY JOB HAVING AVG(SAL)>1500

DAY 4 COLLABRATIVE ASSIGNMENT 50
SELECT JOB, DEPTNO, AVG(SAL) "AVGSALARY" FROM EMP WHERE DEPTNO IN (10,20) GROUP BY JOB, DEPTNO HAVING AVG(SAL) > 2500


DAY 4 COLLABRATIVE ASSIGNMENT 51
SELECT EMPID, EMPNAME, SALARY,
CASE DESIGNATION
WHEN 'Administrator' THEN (SALARY+(SALARY*10)/100)
WHEN 'Manager' THEN (SALARY+(SALARY*5)/100)
WHEN 'Billing Staff' THEN (SALARY+(SALARY*20)/100)
WHEN 'Security' THEN (SALARY+(SALARY*25)/100)
ELSE (SALARY+(SALARY*02)/100)
END  AS INCREASEDSALARY
FROM EMPDETAILS

DAY 4 COLLABRATIVE ASSIGNMENT 52
SELECT EMPID, SALARY,
CASE 
WHEN SALARY<2500 THEN 'Class 3'
WHEN SALARY BETWEEN 2500 AND 5000 THEN 'Class 2'
WHEN SALARY >2500 THEN 'Class 1'
END AS SALGRADE
FROM EMPDETAILS

DAY 4 COLLABRATIVE ASSIGNMENT 53
SELECT ITEMCODE, PRICE "Old Price", ROUND(PRICE-((PRICE*25.5)/100),2) "New Price" FROM ITEM WHERE ITEMTYPE = 'FMCG'

DAY 4 COLLABRATIVE ASSIGNMENT 54
SELECT EMPID, EMPNAME, WORKSIN FROM EMPDETAILS WHERE UPPER(DESIGNATION) ='BILLING STAFF'

DAY 4 COLLABRATIVE ASSIGNMENT 55
SELECT ORDERID, STATUS, 
CASE
WHEN PYMTMODE IS NULL THEN 'Payment yet not done'
ELSE "PYMTMODE"
END  PYMTMODE
FROM ORDERS

DAY 4 COLLABRATIVE ASSIGNMENT 56
SELECT DESCR FROM ITEM WHERE LENGTH(DESCR) > 15

DAY 4 COLLABRATIVE ASSIGNMENT 57
SELECT 
CASE ROID
WHEN 'R1001' THEN 1001
WHEN 'R1002' THEN 1002
WHEN 'R1003' THEN 1003
END NUMERICROID
FROM RETAILOUTLET

DAY 4 COLLABRATIVE ASSIGNMENT 58
SELECT TO_CHAR(SYSDATE, 'Mon/DD/YYYY Day') "CURRENTDATE" FROM DUAL

DAY 4 COLLABRATIVE ASSIGNMENT 59
SELECT count(ORDERID) AS TOTALORDERSCOUNT, count(pymtmode) AS PAIDORDERSCOUNT
FROM orders 

DAY 4 COLLABRATIVE ASSIGNMENT 60
SELECT ORDERID, ABS((TO_DATE(ORDERDATE)-TO_DATE(PYMTDATE))) "NOOFDAYS" FROM ORDERS
SELECT orderid, pymtdate-orderdate AS NOOFDAYS
FROM orders

DAY 5 COLLABRATIVE ASSIGNMENT 61


DAY 5 COLLABRATIVE ASSIGNMENT 62
DAY 5 COLLABRATIVE ASSIGNMENT 63
DAY 5 COLLABRATIVE ASSIGNMENT 64
DAY 5 COLLABRATIVE ASSIGNMENT 65
DAY 5 COLLABRATIVE ASSIGNMENT 66
DAY 5 COLLABRATIVE ASSIGNMENT 67
SELECT E.ENAME, E.SAL, D.DNAME FROM EMP E INNER JOIN DEPT D ON E.DEPTNO = D.DEPTNO WHERE E.SAL > 2000

DAY 5 COLLABRATIVE ASSIGNMENT 68
select E.ENAME, D.DNAME FROM EMP E INNER JOIN DEPT D ON E.DEPTNO = D.DEPTNO WHERE E.JOB = 'MANAGER' 

DAY 5 COLLABRATIVE ASSIGNMENT 69
SELECT DISTINCT D.DNAME FROM DEPT D INNER JOIN EMP E ON E.DEPTNO = D.DEPTNO WHERE E.SAL > 1500

DAY 5 COLLABRATIVE ASSIGNMENT 70
SELECT E.ENAME, V.VEHICLENAME FROM VEHICLE V INNER JOIN EMPVEHICLE EV ON V.VEHICLEID = EV.VEHICLEID RIGHT OUTER  JOIN EMP E ON EV.EMPNO = E.EMPNO 

DAY 5 COLLABRATIVE ASSIGNMENT 71
SELECT I.ITEMCODE, I.DESCR, Q.SNAME FROM ITEM I INNER  JOIN QUOTATION Q ON Q.ITEMCODE = I.ITEMCODE

DAY 5 COLLABRATIVE ASSIGNMENT 72
SELECT C.CUSTID "Customer Id", C.CUSTNAME "Customer Name"
FROM CUSTOMER C INNER JOIN EMPDETAILS E
ON C.CUSTNAME=E.EMPNAME AND C.EMAILID=E.EMAILID

DAY 5 COLLABRATIVE ASSIGNMENT 73
SELECT I.ITEMCODE, I.DESCR, I.CATEGORY, Q.QUOTEDPRICE 
FROM ITEM I INNER JOIN QUOTATION Q 
ON I.ITEMCODE=Q.ITEMCODE WHERE Q.QSTATUS = 'Accepted' 


DAY 5 COLLABRATIVE ASSIGNMENT 74
DAY 5 COLLABRATIVE ASSIGNMENT 75
SELECT Q.ITEMCODE, Q.SNAME, SUM(O.QTYORDERED) TOTALQUANTITY FROM ORDERS O INNER JOIN QUOTATION Q ON O.QUOTATIONID = Q.QUOTATIONID  GROUP BY Q.ITEMCODE, Q.SNAME HAVING SUM(O.QTYORDERED) >=100

DAY 5 COLLABRATIVE ASSIGNMENT 76
DAY 5 COLLABRATIVE ASSIGNMENT 77
DAY 5 COLLABRATIVE ASSIGNMENT 78
DAY 5 COLLABRATIVE ASSIGNMENT 79
DAY 5 COLLABRATIVE ASSIGNMENT 80
DAY 5 COLLABRATIVE ASSIGNMENT 81
DAY 5 COLLABRATIVE ASSIGNMENT 82
DAY 5 COLLABRATIVE ASSIGNMENT 83
DAY 5 COLLABRATIVE ASSIGNMENT 84
DAY 5 COLLABRATIVE ASSIGNMENT 85


=============================================================================

full outer join concept
FULL OUTER Join combines the effect of both LEFT OUTER JOIN and the RIGHT OUTER JOIN. Full Outer Join between table A and table B 
returns matched as well as unmatched rows from both tables. For two tables with p and q rows, a 1:1 relationship and m matched rows 
the total number of rows in the resultset is m + (p - m) + (q - m) = p + q - m. Let us understand this join using tables in Employee 
database:
                       ********************** m + (p - m) + (q - m) = p + q - m ****************************

